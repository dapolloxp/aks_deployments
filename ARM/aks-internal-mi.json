{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "resourceName": {
            "type": "string",
            "metadata": {
                "description": "The name of the Managed Cluster resource."
            }
        },
        "location": {
            "type": "string",
            "metadata": {
                "description": "The location of AKS resource."
            }
        },
        "dnsPrefix": {
            "type": "string",
            "metadata": {
                "description": "Optional DNS prefix to use with hosted Kubernetes API server FQDN."
            }
        },
        "osDiskSizeGB": {
            "type": "int",
            "defaultValue": 1024,
            "metadata": {
                "description": "Disk size (in GiB) to provision for each of the agent pool nodes. This value ranges from 0 to 1023. Specifying 0 will apply the default disk size for that agentVMSize."
            },
            "minValue": 0,
            "maxValue": 1024
        },
        "agentCount": {
            "type": "int",
            "defaultValue": 2,
            "metadata": {
                "description": "The number of agent nodes for the cluster."
            },
            "minValue": 1,
            "maxValue": 100
        },
        "agentVMSize": {
            "type": "string",
            "defaultValue": "Standard_D2_v2",
            "metadata": {
                "description": "The size of the Virtual Machine."
            }
        },
        "nodeRG": {
            "type": "string",
            "metadata": {
                "description": "Node RG."
            }
        },
        
        "osType": {
            "type": "string",
            "defaultValue": "Linux",
            "allowedValues": [
                "Linux"
            ],
            "metadata": {
                "description": "The type of operating system."
            }
        },
        "kubernetesVersion": {
            "type": "string",
            "defaultValue": "1.16.7",
            "metadata": {
                "description": "The version of Kubernetes."
            }
        },
        "orchestratorVersion": 
      {
          "type": "string",
          "defaultValue": "1.16.7",
          "allowedValues": 
          [      
            "1.13.5",
            "1.15.10",
            "1.16.7"
          ],
          "metadata": 
          {
              "description": "The orchestrator version of your managed cluster."
          }
      },
        "networkPlugin": {
            "type": "string",
            "defaultValue": "azure",
            "allowedValues": [
                "azure",
                "kubenet"
            ],
            "metadata": {
                "description": "Network plugin used for building Kubernetes network."
            }
        },
        "maxPods": {
            "type": "int",
            "defaultValue": 30,
            "metadata": {
                "description": "Maximum number of pods that can run on a node."
            }
        },
        "enableRBAC": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Boolean flag to turn on and off of RBAC."
            }
        },
        "vmssNodePool": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Boolean flag to turn on and off of VM scale sets"
            }
        },
        "enableHttpApplicationRouting": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Boolean flag to turn on and off of http application routing."
            }
        }, 
        
        "serviceCidr": {
            "type": "string",
            "metadata": {
                "description": "A CIDR notation IP range from which to assign service cluster IPs."
            }
        },
        "dnsServiceIP": {
            "type": "string",
            "metadata": {
                "description": "Containers DNS server IP address."
            }
        },
        "dockerBridgeCidr": {
            "type": "string",
            "metadata": {
                "description": "A CIDR notation IP for Docker bridge."
            }
        },
        "adminGroupObjectID": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "the object ID of the AAD admin group"
            }
        },
        "enableAutoScaling": 
        {
            "type": "bool",
            "defaultValue": true,
            "metadata": 
            {
                "description": "Whether to enable auto-scaler"
            }
        },
        "maxCount": 
        {
            "type": "int",
            "defaultValue": 12,
            "metadata": 
            {
                    "description": "Maximum number of nodes for auto-scaling. This value should match the count value for the node pool."
            } 
        },
        "minCount": 
        {
            "type": "int",
            "defaultValue": 1,
            "metadata": 
            {
                    "description": "Maximum number of nodes for auto-scaling. This value should match the count value for the node pool."
            } 
        },
        "type": 
            {
                "type": "string",
                "defaultValue": "VirtualMachineScaleSets",
                "metadata":  
                {
                    "description": "AgentPoolType represents types of an agent pool"
                }
            },
        "tenantID": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "the AAD tenant ID. can be omitted if it's same as subscription tenant ID"
            }
        },
        "existingVirtualNetworkName" : {
            "type" : "string"
        },
        "existingVirtualNetworkResourceGroup": {
            "type": "string",
            "metadata": {
                "description": "Name of the existing VNET resource group"
            }
        },
        "existingSubnetName": {
            "type": "string",
            "metadata": {
                "description": "Subnet name that will contain the App Service Environment"
            }
        },
        "linuxAdminUsername": {
           "type": "string",
           "metadata": {
               "description": "User name for the Linux Virtual Machines."
           }
       },
       "sshRSAPublicKey": {
           "type": "string",
           "metadata": {
               "description": "Configure all linux machines with the SSH RSA public key string. Your key should include three parts, for example 'ssh-rsa AAAAB...snip...UcyupgH azureuser@linuxvm'"
           }
       },
        "ScaleSetPriority": 
       {
          "type": "string",
          "defaultValue": "Spot",
          "allowedValues": [
                "Spot",
                "Regular"
          ],
          "metadata": 
          {
              "description": "Priority of the nodes assigned to the scale set backing the node pool."
          } 
        }
        
    },
    "variables": {
        "vnetSubnetId": "[resourceId(parameters('existingVirtualNetworkResourceGroup'),'Microsoft.Network/virtualNetworks/subnets',parameters('existingVirtualNetworkName'),parameters('existingSubnetName'))]"
    },
    "resources": [
        {
            "apiVersion": "2020-03-01",
            "dependsOn": [],
            "type": "Microsoft.ContainerService/managedClusters",
            "location": "[parameters('location')]",
            "name": "[parameters('resourceName')]",
            "identity": {
                    "type": "SystemAssigned"
                },
            "properties": {
                "kubernetesVersion": "[parameters('kubernetesVersion')]",
                "enableRBAC": "[parameters('enableRBAC')]",
                "nodeResourceGroup": "[parameters('nodeRG')]",
                "dnsPrefix": "[parameters('dnsPrefix')]",

                "orchestratorProfile": 
                {
                   "orchestratorType": "Kubernetes",
                   "kubernetesConfig": {
                      "networkPolicy": "azure"
                    }
                },
 
                "agentPoolProfiles": [
                    {
                        "name": "agentpool01",
                        "osDiskSizeGB": "[parameters('osDiskSizeGB')]",
                        "count": "[parameters('agentCount')]",
                        "vmSize": "[parameters('agentvmSize')]",
                        "availabilityZones" : ["1","2","3"],
                        "osType": "[parameters('osType')]",
                        "storageProfile": "ManagedDisks",
                        "type": "VirtualMachineScaleSets",
                        "vnetSubnetID": "[variables('vnetSubnetID')]",
                        "mode": "System"
                    },
                    {
                        "name" : "agentpool02",
                        "count": "[parameters('agentCount')]",
                        "vmSize": "[parameters('agentvmSize')]",
                        "availabilityZones" : ["1","2","3"],
                        "osDiskSizeGB": "[parameters('osDiskSizeGB')]",
                        "osType": "[parameters('osType')]",        
                        "enableAutoScaling": "[parameters('enableAutoScaling')]",
                        "type": "[parameters('type')]",
                        "orchestratorVersion": "[parameters('orchestratorVersion')]",   
                        "nodeLabels": {
                            "kubernetes.azure.com/scalesetpriority": "spot"
                        },
                        "ScaleSetPriority": "[parameters('ScaleSetPriority')]",
                        "ScaleSetEvictionPolicy": "Delete",
                        "nodeTaints": [
                            "kubernetes.azure.com/scalesetpriority=spot:NoSchedule"
                        ],
                        "maxPods": "[parameters('maxPods')]",
                        "minCount": "[parameters('minCount')]",
                        "maxCount": "[parameters('maxCount')]",
                        "vnetSubnetID": "[variables('vnetSubnetID')]"
                        }
                ],
                "linuxProfile": {
                   "adminUsername": "[parameters('linuxAdminUsername')]",
                   "ssh": {
                       "publicKeys": [
                           {
                               "keyData": "[parameters('sshRSAPublicKey')]"
                           }
                       ]
                   }
               },
                "aadProfile": 
                {
                    "managed": true,
                    "tenantID": "[parameters('tenantID')]",
                    "adminGroupObjectIDs": [
                        "[parameters('adminGroupObjectID')]"
                    ]
                },
                "networkProfile": {
                    "loadBalancerSku": "standard",
                    "networkPlugin": "[parameters('networkPlugin')]",
                    "serviceCidr": "[parameters('serviceCidr')]",
                    "dnsServiceIP": "[parameters('dnsServiceIP')]",
                    "dockerBridgeCidr": "[parameters('dockerBridgeCidr')]",
                    "outboundType": "userDefinedRouting"
                },
                
                "addonProfiles": {
                    "httpApplicationRouting": {
                        "enabled": "[parameters('enableHttpApplicationRouting')]"
                    }
                }
            },
            "tags": {}
        }
    ],
    "outputs": {
        "controlPlaneFQDN": {
            "type": "string",
            "value": "[reference(concat('Microsoft.ContainerService/managedClusters/', parameters('resourceName'))).fqdn]"
        }
    }
}